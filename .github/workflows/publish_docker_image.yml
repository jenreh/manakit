name: 01 Build and Publish GHRC Image on Release

on:
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      release_tag:
        description: Release tag to use when running manually (defaults to 'latest')
        required: false
        type: string
        default: latest


# Restrict the default token and grant only what's needed
# Note: secrets.GITHUB_TOKEN is auto-generated per workflow run. It inherits the
# permissions set here. For pushing to GHCR, packages: write is required.
permissions:
  contents: read
  packages: write

concurrency:
  group: release-docker-image-${{ github.event.release.tag_name || github.event.inputs.release_tag || github.ref }}
  cancel-in-progress: false

jobs:
  build-and-push:
    name: Build and push image to GitHub Packages (GHCR)
    runs-on: ubuntu-latest
    # Publish under the org's GHCR namespace; keep image name lowercase
    env:
      IMAGE_NAME: ghcr.io/jenreh/manakit-app
    steps:
      - name: Resolve release tag
        id: resolve_tag
        run: |
          if [ "${{ github.event_name }}" = "release" ]; then
            TAG="${{ github.event.release.tag_name }}"
          else
            TAG="${{ github.event.inputs.release_tag || 'latest' }}"
          fi
          echo "release_tag=${TAG}" >> "$GITHUB_OUTPUT"
          echo "Using RELEASE_TAG=${TAG}"
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Set up QEMU for cross-architecture builds
        uses: docker/setup-qemu-action@v3
        with:
          platforms: arm64

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Generate Docker image tags and labels
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.IMAGE_NAME }}
          # Tag rules:
          # - On release: use the release tag and also 'latest'
          # - On manual (workflow_dispatch): use provided input (defaults to 'latest')
          tags: |
            # Manual runs
            type=raw,value=${{ steps.resolve_tag.outputs.release_tag }},enable=${{ github.event_name == 'workflow_dispatch' }}
            # Releases
            type=semver,pattern={{version}},value=${{ github.event.release.tag_name }},enable=${{ github.event_name == 'release' }}
            type=raw,value=latest,enable=${{ github.event_name == 'release' }}

      - name: Build and push image (release tag and latest)
        uses: docker/build-push-action@v5
        env:
          RELEASE_TAG: ${{ steps.resolve_tag.outputs.release_tag }}
        with:
          context: .
          file: ./Dockerfile
          push: true
          platforms: linux/amd64,linux/arm64
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            RELEASE_TAG=${{ steps.resolve_tag.outputs.release_tag }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
